% Generated by roxygen2 (4.0.2): do not edit by hand
\name{hmc_sampler}
\alias{hmc_sampler}
\title{Hamiltonian MC sampler}
\usage{
hmc_sampler(U, dUdq, M, eps_gen, L)
}
\arguments{
\item{U}{potential energy function.}

\item{dUdq}{derivative of potential energy function with respect to position.}

\item{M}{the mass matrix (i.e.,~the covariance matrix in the kinetic energy function)}

\item{eps_gen}{a function which generates the leapfrog step-size \eqn{\epsilon}}

\item{L}{number of leapfrog steps per proposal}
}
\description{
Hamiltonian MC sampler
}
\examples{
### Model setup -- 2d correlated Gaussian
S <- matrix(c(1,-0.98,-0.98,1),2,2)
n <- nrow(S)
Q <- chol2inv(chol(S))
cholQ <- chol(Q)
U <- function(q) 0.5 * crossprod(cholQ \%*\% q)
dUdq <- function(q) Q \%*\% q
M <- diag(1,n)

### Sampler parameters -- set eps and L according to eigenvalues of covariance matrix
E <- eigen(S)
eps_gen <- function() round(min(E$values),2)
L = as.integer(max(E$values)/eps_gen())
print(paste0("eps = ",eps_gen(),". L = ",L))
sampler <- hmc_sampler(U = U,dUdq = dUdq, M = M,eps_gen = eps_gen,L = L)

### Now sample
N <- 1000
q <- matrix(0,n,N)
for(i in 2:N) q[,i] <- sampler(q = q[,(i-1)])
plot(t(q),ylim = c(-4,4),xlim=c(-4,4))
}

